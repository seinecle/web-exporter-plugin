/*
 * author: Cl√©ment Levallois
 */
package net.clementlevallois.web.exports.plugin.controller;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.prefs.Preferences;
import javax.swing.SwingUtilities;

import javax.swing.JTextField;
import javax.swing.SwingWorker;
import org.openide.util.Exceptions;
import org.openide.util.NbPreferences;

/**
 *
 * @author LEVALLOIS
 */
public class JPanelWebExport extends javax.swing.JPanel {

    private JsonObject responseGithubConnectAction;
    private JsonObject responseGithubUserCodeInput;
    private String accessToken;
    private String deviceCode;

    /**
     * Creates new form JPanelWebExport
     */
    public JPanelWebExport() {
        initComponents();
        Preferences preferences = NbPreferences.forModule(this.getClass());
        accessToken = preferences.get("access_token", "");
        if (accessToken.isBlank()) {
            jLabelAlreadyLoggedIn.setVisible(false);
        } else {
            jLabelAlreadyLoggedIn.setVisible(true);
        }
        jTextFieldGithubErrorMsg.setBackground(Color.WHITE);
        jTextFieldGithubErrorMsg.setText("");
    }

    SwingWorker pollWorker = new SwingWorker<Void, Integer>() {

        @Override
        protected Void doInBackground() throws Exception {
            JsonObject jsonObject = new JsonObject();
            String clientId = "Iv1.936245ffcd310336";
            try {
                HttpClient client = HttpClient.newHttpClient();
                String url = "https://github.com/login/oauth/access_token";

                String inputParams = "client_id="
                        + clientId
                        + "&"
                        + "device_code="
                        + deviceCode
                        + "&"
                        + "grant_type=urn:ietf:params:oauth:grant-type:device_code";
                HttpRequest request = HttpRequest.newBuilder()
                        .uri(URI.create(url))
                        .header("accept", "application/json")
                        .POST(HttpRequest.BodyPublishers.ofString(inputParams))
                        .build();

                boolean success = false;
                long startTime = System.currentTimeMillis();
                long maxDuration = 900_000;
                float currDuration = 0;
                int loops = 0;
                while (!success && currDuration < maxDuration) {
                    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
                    JsonElement responseAsJsonElement = JsonParser.parseString(response.body());
                    jsonObject = responseAsJsonElement.getAsJsonObject();
                    if (jsonObject.has("access_token")) {
                        break;
                    }
                    currDuration = (float) (System.currentTimeMillis() - startTime) / (float) 1000;
                    Thread.sleep(5200);
                    publish(++loops);
                }
            } catch (IOException | InterruptedException ex) {
                Exceptions.printStackTrace(ex);
                jTextFieldGithubErrorMsg.setText(ex.getMessage());
            }
            responseGithubUserCodeInput = jsonObject;
            return null;
        }

        @Override
        public void done() {
            if (responseGithubUserCodeInput.has("access_token")) {
                accessToken = responseGithubUserCodeInput.get("access_token").getAsString();
                Preferences preferences = NbPreferences.forModule(this.getClass());
                preferences.put("access_token", accessToken);
                jTextFieldGithubErrorMsg.setText("success. switch to the tab 'publish'");
            } else {
                jTextFieldGithubErrorMsg.setText("error - the user code was not entered on the website.");
            }
        }

        protected void process(Integer loops) {
            jTextFieldGithubErrorMsg.setText(loops.toString());
        }

    };

    public JTextField getjTextFieldUserCode() {
        return jTextFieldUserCode;
    }

    public JsonObject getResponseGithubConnectAction() {
        return responseGithubConnectAction;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        tabGithub = new javax.swing.JPanel();
        jButtonGithubConnect = new javax.swing.JButton();
        jTextFieldUserCode = new javax.swing.JTextField();
        jTextFieldWebsiteLoginUrl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldGithubErrorMsg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelAlreadyLoggedIn = new javax.swing.JLabel();
        jButtonResetLogin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonPublish = new javax.swing.JButton();
        jTextFieldUrlPublishedGraph = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldPublishErrorMsg = new javax.swing.JTextField();

        jButtonGithubConnect.setBackground(new java.awt.Color(204, 204, 204));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonGithubConnect, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jButtonGithubConnect.text")); // NOI18N
        jButtonGithubConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGithubConnectActionPerformed(evt);
            }
        });

        jTextFieldUserCode.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldUserCode.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextFieldUserCode.text")); // NOI18N

        jTextFieldWebsiteLoginUrl.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextFieldWebsiteLoginUrl.text")); // NOI18N
        jTextFieldWebsiteLoginUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWebsiteLoginUrlActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel2.text")); // NOI18N

        jTextFieldGithubErrorMsg.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldGithubErrorMsg.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextFieldGithubErrorMsg.text")); // NOI18N
        jTextFieldGithubErrorMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGithubErrorMsgActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel4.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextField1.text")); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel6.text")); // NOI18N

        jTextField2.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextField2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel9.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel1.text")); // NOI18N

        jLabelAlreadyLoggedIn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelAlreadyLoggedIn.setForeground(new java.awt.Color(0, 204, 102));
        org.openide.awt.Mnemonics.setLocalizedText(jLabelAlreadyLoggedIn, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabelAlreadyLoggedIn.text")); // NOI18N

        jButtonResetLogin.setBackground(new java.awt.Color(204, 204, 204));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonResetLogin, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jButtonResetLogin.text")); // NOI18N
        jButtonResetLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabGithubLayout = new javax.swing.GroupLayout(tabGithub);
        tabGithub.setLayout(tabGithubLayout);
        tabGithubLayout.setHorizontalGroup(
            tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabGithubLayout.createSequentialGroup()
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addGroup(tabGithubLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabGithubLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabGithubLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldUserCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabGithubLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldWebsiteLoginUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabGithubLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonGithubConnect)))
                    .addGroup(tabGithubLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(tabGithubLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAlreadyLoggedIn)
                    .addGroup(tabGithubLayout.createSequentialGroup()
                        .addComponent(jTextFieldGithubErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(jButtonResetLogin)))
                .addContainerGap(647, Short.MAX_VALUE))
        );
        tabGithubLayout.setVerticalGroup(
            tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabGithubLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabelAlreadyLoggedIn)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButtonGithubConnect))
                .addGap(18, 18, 18)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldUserCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldWebsiteLoginUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(tabGithubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGithubErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonResetLogin))
                .addContainerGap())
        );

        tabs.addTab(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.tabGithub.TabConstraints.tabTitle"), tabGithub); // NOI18N

        jButtonPublish.setBackground(new java.awt.Color(204, 204, 204));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonPublish, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jButtonPublish.text")); // NOI18N
        jButtonPublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPublishActionPerformed(evt);
            }
        });

        jTextFieldUrlPublishedGraph.setEditable(false);
        jTextFieldUrlPublishedGraph.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldUrlPublishedGraph.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextFieldUrlPublishedGraph.text")); // NOI18N
        jTextFieldUrlPublishedGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUrlPublishedGraphActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jLabel10.text")); // NOI18N

        jTextFieldPublishErrorMsg.setText(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jTextFieldPublishErrorMsg.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jButtonPublish))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jTextFieldUrlPublishedGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jTextFieldPublishErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(620, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(jButtonPublish)
                .addGap(31, 31, 31)
                .addComponent(jTextFieldUrlPublishedGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jTextFieldPublishErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tabs.addTab(org.openide.util.NbBundle.getMessage(JPanelWebExport.class, "JPanelWebExport.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldWebsiteLoginUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWebsiteLoginUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldWebsiteLoginUrlActionPerformed

    private void jButtonGithubConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGithubConnectActionPerformed
        jTextFieldGithubErrorMsg.setBackground(Color.WHITE);
        jTextFieldGithubErrorMsg.setText("");
        responseGithubConnectAction = PublishingActions.connectToGithub();
        if (!responseGithubConnectAction.has("user_code")) {
            jTextFieldGithubErrorMsg.setText("error retrieving your user code. Are you logged in Github?");
        } else {
            String userCode = responseGithubConnectAction.get("user_code").getAsString();
            deviceCode = responseGithubConnectAction.get("device_code").getAsString();
            jTextFieldUserCode.setText(userCode);
            pollWorker.execute();
        }
    }//GEN-LAST:event_jButtonGithubConnectActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextFieldGithubErrorMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGithubErrorMsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGithubErrorMsgActionPerformed

    private void jButtonResetLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetLoginActionPerformed
        Preferences preferences = NbPreferences.forModule(this.getClass());
        preferences.remove("access_token");
        jLabelAlreadyLoggedIn.setVisible(false);
        jTextFieldGithubErrorMsg.setText("token removed - the setup process has been reset.");
    }//GEN-LAST:event_jButtonResetLoginActionPerformed

    private void jTextFieldUrlPublishedGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUrlPublishedGraphActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUrlPublishedGraphActionPerformed

    private void jButtonPublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPublishActionPerformed
        JsonObject jsonObjectOfGexfAsStringRetrieval = PublishingActions.getGexfAsString();
        if (!jsonObjectOfGexfAsStringRetrieval.has("200")) {
            if (!jsonObjectOfGexfAsStringRetrieval.keySet().isEmpty()) {
                String errorKey = jsonObjectOfGexfAsStringRetrieval.keySet().iterator().next();
                jTextFieldPublishErrorMsg.setText(jsonObjectOfGexfAsStringRetrieval.get(errorKey).getAsString());
            } else {
                jTextFieldPublishErrorMsg.setText("unspecified error when retrieving gexf of current network");
            }
        } else {
            String gexf = jsonObjectOfGexfAsStringRetrieval.get("200").getAsString();
            Preferences preferences = NbPreferences.forModule(this.getClass());
            accessToken = preferences.get("access_token", "");
            if (accessToken.isBlank()) {
                jTextFieldPublishErrorMsg.setText("error publishing (no token). Have you done the set up first?");
            } else {
                JsonObject responseGistPublished = PublishingActions.postGexfToGist(gexf, accessToken);
                if (!responseGistPublished.has("201")) {
                    if (responseGistPublished.keySet().isEmpty()) {
                        jTextFieldPublishErrorMsg.setText("Error publishing, no specific msg received");
                    } else {
                        String errorMsgInBodyKey = responseGistPublished.keySet().iterator().next();
                        String errorMsgInBodyValue = responseGistPublished.get(errorMsgInBodyKey).getAsString();
                        jTextFieldPublishErrorMsg.setText("Error publishing the gexf to a gist. Error code: " + errorMsgInBodyKey + "; " + "error msg: " + errorMsgInBodyValue);
                    }
                } else {
                    String rawUrl = responseGistPublished.get("raw_url").getAsString();
                    String htmlUrl = responseGistPublished.get("html_url").getAsString();
                    String retinaBareURl = "https://ouestware.gitlab.io/retina/beta/#/graph/";
                    String retinaFullURl = retinaBareURl+"?url="+rawUrl;
                    
                    String textForUserWithURL = "The url of your uploaded gexf is:"
                            +"\n"
                            + htmlUrl
                            + "\n\n"
                            +"The url to visualize your graph on Retina is:"
                            +"\n"      
                            + retinaFullURl;

                            jTextFieldPublishErrorMsg.setText(responseGistPublished.get("201").getAsJsonObject().toString());
                }
            }
        }
    }//GEN-LAST:event_jButtonPublishActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGithubConnect;
    private javax.swing.JButton jButtonPublish;
    private javax.swing.JButton jButtonResetLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAlreadyLoggedIn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldGithubErrorMsg;
    private javax.swing.JTextField jTextFieldPublishErrorMsg;
    private javax.swing.JTextField jTextFieldUrlPublishedGraph;
    private javax.swing.JTextField jTextFieldUserCode;
    private javax.swing.JTextField jTextFieldWebsiteLoginUrl;
    private javax.swing.JPanel tabGithub;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
